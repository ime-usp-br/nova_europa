#!/usr/bin/env bash

# Gera o freetds.conf a partir do template e das variáveis de ambiente
# Define valores padrão caso as variáveis não estejam no .env
REPLICADO_HOST_VAL=$REPLICADO_HOST
REPLICADO_PORT_VAL=$REPLICADO_PORT

# Usa 'sed' para substituir os placeholders no template e criar o arquivo final
sed -e "s/__REPLICADO_HOST__/$REPLICADO_HOST_VAL/g" \
    -e "s/__REPLICADO_PORT__/$REPLICADO_PORT_VAL/g" \
    /etc/freetds/freetds.conf.template > /etc/freetds/freetds.conf

if [ "$SUPERVISOR_PHP_USER" != "root" ] && [ "$SUPERVISOR_PHP_USER" != "sail" ]; then
    echo "You should set SUPERVISOR_PHP_USER to either 'sail' or 'root'."
    exit 1
fi

if [ ! -z "$WWWUSER" ]; then
    usermod -u $WWWUSER sail
fi

if [ ! -d /.composer ]; then
    mkdir /.composer
fi

chmod -R ugo+rw /.composer

# Install Chrome Headless Shell matching the puppeteer-core version
# This runs on container startup to ensure version compatibility
if [ ! -f /home/sail/.cache/puppeteer/.chrome-installed ]; then
    echo "Installing Chrome Headless Shell for Puppeteer..."

    # Ensure cache directory exists and has correct permissions
    mkdir -p /home/sail/.cache/puppeteer
    chown -R sail:sail /home/sail/.cache/puppeteer

    # Get the expected Chrome version from puppeteer-core
    CHROME_VERSION=$(gosu sail node -e "console.log(require('/var/www/html/node_modules/puppeteer-core/lib/cjs/puppeteer/revisions.js').PUPPETEER_REVISIONS['chrome-headless-shell'])" 2>/dev/null)

    if [ -n "$CHROME_VERSION" ]; then
        echo "Detected Chrome version: $CHROME_VERSION"
        gosu sail npx puppeteer browsers install chrome-headless-shell@$CHROME_VERSION

        if [ $? -eq 0 ]; then
            # Create marker file to avoid reinstalling on every restart
            gosu sail touch /home/sail/.cache/puppeteer/.chrome-installed
            echo "Chrome Headless Shell installed successfully"
        else
            echo "ERROR: Failed to install Chrome Headless Shell"
        fi
    else
        echo "Warning: Could not detect Chrome version from puppeteer-core"
        echo "Installing latest version..."
        gosu sail npx puppeteer browsers install chrome-headless-shell

        if [ $? -eq 0 ]; then
            gosu sail touch /home/sail/.cache/puppeteer/.chrome-installed
            echo "Chrome Headless Shell installed successfully"
        else
            echo "ERROR: Failed to install Chrome Headless Shell"
        fi
    fi
fi

if [ $# -gt 0 ]; then
    if [ "$SUPERVISOR_PHP_USER" = "root" ]; then
        exec "$@"
    else
        exec gosu $WWWUSER "$@"
    fi
else
    exec /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf
fi
